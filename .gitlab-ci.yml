# .gitlab-ci.yml for USGS SAS deployment
#
# Reference:
#   - https://docs.gitlab.com/ee/ci/yaml/
#
# GitLab Group CI Variables:
#   DEPLOY_TRIGGER_REF
#     Set on the individual deployment jobs below. This is the branch name to
#     trigger on the deployment pipeline.
#
#   DEPLOY_TRIGGER_TOKEN
#     The GitLab API token for triggering the deployment pipeline. This is
#     configured on the deployment repository.
#     Specified external to this file as a CI variable.
#
#   DEPLOY_TRIGGER_URL
#     API URL for triggering the deployment pipeline. This is configured on the
#     deployment repository.
#     Specified external to this file as a CI variable.
#
#   ARTIFACTORY_BASE_URL
#     Base URL for SAS Artifactory.
#
#   ARTIFACTORY_TOKEN
#     An API token for uploading to Artifactory.
#
#   SAS_IMAGES_URL
#     Base URL for SAS Docker image registry.
#
---
stages:
  - Build
  - Package
  - Deploy Trigger

variables:
  # Full URL to the target Artifactory repository
  ARTIFACTORY_URL: ${ARTIFACTORY_BASE_URL}/nbm

#
# == Build
#
# Use npm to produce a static site artifact
#
npm_build:
  stage: Build
  # Use an internal image registry for the node image. The local image name
  # and tags match the official upstream image.
  # This variable is set in gitlab group vars
  image: ${SAS_IMAGES_URL}/node:10.15
  tags:
    - docker
  script:
    - export PATH=${PWD}/node_modules/.bin:${PATH}
    - npm install
    - npm run build
  artifacts:
    paths:
      - build

#
# == Upload artifact to Artifactory
#
# This job zips the build directory and uploads it to Artifactory.
# The URL to the artifact is passed in the deployment trigger.
#
.artifactory_deploy:
  image: code.chs.usgs.gov:5001/sas/ops/ci-pipeline/sas-deploy-tool:v1
  stage: Package
  tags:
    - docker
  only:
    variables:
      # This job must run on a protected ref due to the ARTIFACTORY_TOKEN
      # exposure.
      - $CI_COMMIT_REF_PROTECTED == "true"
  dependencies:
    - npm_build
  before_script:
    # Set the ARTIFACT_FILE and ARTIFACT_URL in the environment and output them
    # to a .vars file that can be sourced for the deployment trigger jobs.
    - export ARTIFACT_FILE=nbm-${BUILD_VERSION}.zip
    - export ARTIFACT_URL=${ARTIFACTORY_URL}/${ARTIFACT_FILE}
    - echo ARTIFACT_FILE=${ARTIFACT_FILE} > .vars
    - echo ARTIFACT_URL=${ARTIFACT_URL} >> .vars
  script:
    # Zip the contents of the 'dist/' directory.
    - '(cd build && zip -9 -r ../${ARTIFACT_FILE} .)'
    # Compute the sha1sum of the .zip file for uploading to artifactory.
    - export SHA1SUM=$(sha1sum ${ARTIFACT_FILE} | cut -d " " -f1)
    - curl --fail -k
      -H "X-JFrog-Art-Api:${ARTIFACTORY_TOKEN}"
      -H "X-Checksum-Sha1:${SHA1SUM}"
      -T ${ARTIFACT_FILE}
      ${ARTIFACT_URL}
  artifacts:
    paths:
      - .vars

upload_artifact_master:
  extends: .artifactory_deploy
  variables:
    BUILD_VERSION: latest
  only:
    refs:
      - ci
      - master

upload_artifact_tag:
  extends: .artifactory_deploy
  variables:
    BUILD_VERSION: ${CI_COMMIT_TAG}
  only:
    refs:
      - tags

#
# == Deployment Triggers
#
# These jobs use 'curl' to make a request to the GitLab API to trigger the
# deployment repository's pipeline. The pipeline trigger is configured on
# the deployment repository under "Settings -> CI/CD -> Pipeline Triggers",
# which provides an API URL and token. Those values are maintained as
# GitLab group variables.
#
# References:
#   - https://docs.gitlab.com/ee/ci/triggers/README.html
#
.deploy_trigger:
  image: code.chs.usgs.gov:5001/sas/ops/docker/base-images/curl:master-latest
  stage: Deploy Trigger
  tags:
    - docker
  only:
    variables:
      - $CI_COMMIT_REF_PROTECTED == "true"
  variables:
    DEPLOY_TRIGGER_VARS: ARTIFACT_URL
  before_script:
    - source .vars
  script:
    # Trigger the deployment pipeline, passing along the Artifactory URL for
    # the artifact.
    - curl -X POST --fail
      -F variables[ARTIFACT_URL]=${ARTIFACT_URL}
      -F token=${DEPLOY_TRIGGER_TOKEN}
      -F ref=${DEPLOY_TRIGGER_REF}
      ${DEPLOY_TRIGGER_URL}

trigger_deploy_development:
  extends: .deploy_trigger
  variables:
    DEPLOY_TRIGGER_REF: refactor
  dependencies:
    # The '.vars' file with the ARTIFACT_URL is provided by this job.
    - upload_artifact_master
  only:
    refs:
      - ci
      - master

trigger_deploy_staging:
  extends: .deploy_trigger
  variables:
    # run the deploy pipeline for the staging environment, this code is automatically deployed and scanned
    DEPLOY_TRIGGER_REF: release
  dependencies:
    # The '.vars' file with the ARTIFACT_URL is provided by this job.
    - upload_artifact_tag
  only:
    refs:
      - tags
